version: 2.1
jobs:
  checkout:
    working_directory: /home/circleci/repository
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout:
          path: /home/circleci/repository
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - repository
  build_monolith:
    working_directory: /home/circleci/repository/ecommerce-monolith

    docker:
      - image: circleci/openjdk:8-jdk-stretch

    steps:
      - attach_workspace:
          at: /home/circleci

      - restore_cache:
          key: ecommerce-monolith-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: ecommerce-monolith-{{ checksum "pom.xml" }}

      - run: mvn package

      - store_test_results:
          path: target/surefire-reports

      - store_artifacts:
          path: target/ecommerce-monolith-0.0.1-SNAPSHOT.jar

      - persist_to_workspace:
          root: /home/circleci
          paths:
            - repository/ecommerce-monolith

  publish_docker_image_frontend:
    working_directory: /home/circleci/repository/ecommerce-frontend

    docker:
      - image: circleci/openjdk:8-jdk-stretch

    environment:
      IMAGE_NAME: woorea/ecommerce-frontend

    steps:
      - attach_workspace:
          at: /home/circleci
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Push Docker Image
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_SHA1
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$CIRCLE_SHA1
  publish_docker_image_monolith:
    working_directory: /home/circleci/repository/ecommerce-monolith

    docker:
      - image: circleci/openjdk:8-jdk-stretch

    environment:
      IMAGE_NAME: woorea/ecommerce-monolith

    steps:
      - attach_workspace:
          at: /home/circleci
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Push Docker Image
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_SHA1
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$CIRCLE_SHA1
  deploy_k8s:
    working_directory: /home/circleci/repository/ecommerce-monolith

    docker:
      - image: circleci/openjdk:8-jdk-stretch

    environment:
      IMAGE_NAME: woorea/ecommerce-monolith

    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Install kubectl
          command: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod u+x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: Install helm
          command: |
            curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - run:
          name: Install doctl
          command: |
            curl -sL  https://github.com/digitalocean/doctl/releases/download/v1.45.1/doctl-1.45.1-linux-amd64.tar.gz | tar -xzv
            chmod +x ./doctl
            sudo mv ./doctl /usr/local/bin/doctl
            doctl version
      - run:
          name: Authorize doctl
          command: doctl auth init -t $DIGITALOCEAN_CIRCLECI_TOKEN
      - run:
          name: Connect to cluster
          command: doctl kubernetes cluster kubeconfig save $KUBERNETES_CLUSTER
      - run:
          name: Get pods
          command: kubectl get pods
      - run:
          name: Deploy
          command: |
            helm upgrade --install --force --set image.tag=$CIRCLE_SHA1 ecommerce ./helm
workflows:
  version: 2.1
  ecommerce:
    jobs:
      - checkout
      - build_frontend:
          requires:
            - checkout
      - build_monolith:
          requires:
            - checkout
      - publish_docker_image_frontend:
          requires:
            - checkout
          filters:
            branches:
              only:
                - master
      - publish_docker_image_monolith:
          requires:
            - build_monolith
          filters:
            branches:
              only:
                - master
      - deploy_k8s:
          requires:
            - publish_docker_image_frontend
            - publish_docker_image_monolith
          filters:
            branches:
              only:
                - master
